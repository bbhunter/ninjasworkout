pipeline {
    agent any

    tools {
        nodejs 'node'
        snyk "snyk" // Specify the Snyk tool
    }

    environment {
        SNYK_TOKEN = credentials('SNYK_TOKEN')
        DEFECT_DOJO = credentials('DEFECT_DOJO')
    }

    stages {
        stage('BUILD') {
            steps {
                echo 'Starting to build the Node.js application'
                sh 'npm install'
            }
        }

        stage('SECURITY TEST') {
            parallel {
                stage('SCA SCAN') {
                    steps {
    echo 'Running Snyk security test'
    script {
        echo "${env.JOB_NAME}"
        sh "snyk auth ${SNYK_TOKEN}"
        sh 'snyk test "$(pwd)" --json-file-output=SNYK.json'
    }
}

                }

                stage('SAST SCAN') {
                   steps {
    echo 'Starting SAST scan'
    script {
        sh 'njsscan "$(pwd)" --json -o NJSSCAN.json'
        
    }
}

                }
            }
        }

    }

    post {
          always{
              sh "curl --location 'http://localhost:8080/api/v2/reimport-scan/' \
            --header 'Authorization: Token ${DEFECT_DOJO}' \
            --form 'engagement_name=\"SAST\"' \
            --form 'verified=\"true\"' \
            --form 'active=\"true\"' \
            --form 'lead=\"1\"' \
            --form 'tags=\"test\"' \
            --form 'scan_type=\"Snyk Scan\"' \
            --form 'minimum_severity=\"Info\"' \
            --form 'close_old_findings=\"false\"' \
            --form 'file=@\"NJSSCAN.json\"' \
            --form 'product_name=\"E BANKING APP\"' \
            --form 'test_title=\"hello\"'"

          }
        failure {
            echo 'Pipeline failed!'
           
        }
    }
}
